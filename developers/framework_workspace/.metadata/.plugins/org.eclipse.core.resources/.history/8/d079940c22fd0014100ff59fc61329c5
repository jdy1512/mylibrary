package spring.mvc.upload;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;

import spring.mvc.vo.MultiUpload;
import spring.mvc.vo.SingleUpload;

@Controller
@RequestMapping("/upload/")
public class FileuploadController {
	private String imageDir = "C:\\Users\\KOSTA_03_001_\\Desktop\\mylibrary\\developers\\apis\\apache-tomcat-7.0.61\\webapps\\spring_mvc_05_fileUpload\\upimage";

	/*
	@RequestMapping("singleup")
	// input type=file 요청파라미터를 받은 변수
	// 1. MultipartFile 타입으로 선언.
	// 2. @RequestParam("요청파라미터명")을 붙여야 한다.
	public String singleUpload( @RequestParam String title,
								@RequestParam("upfile") MultipartFile upfile,
								@RequestParam String info,
								ModelMap map) throws IllegalStateException, IOException {
		System.out.println(title + " , " + info);
		// 업로드된 파일은 임시저장소에 있다.
		// controller메소드 - 파일을 원하는 경로로 이동, 파일 정보를 조회
		
		if (upfile != null && !upfile.isEmpty()) { // 업로드 된 파일이 있다면
			String fileName = upfile.getOriginalFilename(); // 업로드된 파일명
			long size = upfile.getSize(); // 업로드된 파일의 크기(byte)
			// 파일을 원하는 경로로 이동
			File file = new File(imageDir, fileName);
			file.mkdirs();
			upfile.transferTo(file);
			// 업로드 정보를 View로 전달
			map.addAttribute("filename", fileName);
			map.addAttribute("filesize", size);
			map.addAttribute("title", title);
			map.addAttribute("info", info);
		} else {
			map.addAttribute("title", "업로드된 파일이 없습니다");
		}
		return "/singleup/response.jsp";
	}// end of singleUpload
	*/
	
	@RequestMapping("singleup")
	public String singleUpload(@ModelAttribute SingleUpload svo, ModelMap map) throws IllegalStateException, IOException {
		MultipartFile upfile = svo.getUpfile();
		if (upfile != null && !upfile.isEmpty()) { // 업로드 된 파일이 있다.
			// 파일명, 파일크기, title, info를 View에 전달
			map.addAttribute("filename", upfile.getOriginalFilename());
			map.addAttribute("title", svo.getTitle());
			map.addAttribute("filesize", upfile.getSize());
			map.addAttribute("info", svo.getInfo());
			
			// 파일을 imageDir 경로로 옮기기
			File file = new File(imageDir, upfile.getOriginalFilename());
			file.mkdirs();
			upfile.transferTo(file);
		} else { // 업로드된 파일이 없다.
			map.addAttribute("title", "업로드된 파일이 없습니다.");
		}
		return "/singleup/response.jsp";
	}
	
	@RequestMapping("multiup")
	public String multiUpload(@ModelAttribute MultiUpload mvo, ModelMap map) {
		String title = mvo.getTitle();
		List upfile = mvo.getUpfile();
		if (upfile != null) { // 요청파라미터이름 upfile로 넘어온 것이 있고.
			for (Object obj : upfile) {
				MultipartFile mFile = (MultipartFile) obj;
				// 전송된 파일 정보인지 체크
				if (!mFile.isEmpty()) { // 파일이 전송된 경우
					
				} else {
					
				}
			}
			
		}
		
		return "/multiup/response.jsp";
	}
	
	
}
